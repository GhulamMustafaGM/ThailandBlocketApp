<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Advertisement', 'doctrine');

/**
 * BaseAdvertisement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $add_title
 * @property integer $item_category_id
 * @property string $user_name
 * @property string $user_email
 * @property string $user_password
 * @property string $contact_phone
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property integer $city_id
 * @property string $description
 * @property string $price
 * @property integer $status
 * @property City $City
 * @property ItemCategory $ItemCategory
 * @property Doctrine_Collection $AdvertismentDetails
 * @property Doctrine_Collection $AdvertismentImage
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getAddTitle()            Returns the current record's "add_title" value
 * @method integer             getItemCategoryId()      Returns the current record's "item_category_id" value
 * @method string              getUserName()            Returns the current record's "user_name" value
 * @method string              getUserEmail()           Returns the current record's "user_email" value
 * @method string              getUserPassword()        Returns the current record's "user_password" value
 * @method string              getContactPhone()        Returns the current record's "contact_phone" value
 * @method timestamp           getCreatedAt()           Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()           Returns the current record's "updated_at" value
 * @method integer             getCityId()              Returns the current record's "city_id" value
 * @method string              getDescription()         Returns the current record's "description" value
 * @method string              getPrice()               Returns the current record's "price" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method City                getCity()                Returns the current record's "City" value
 * @method ItemCategory        getItemCategory()        Returns the current record's "ItemCategory" value
 * @method Doctrine_Collection getAdvertismentDetails() Returns the current record's "AdvertismentDetails" collection
 * @method Doctrine_Collection getAdvertismentImage()   Returns the current record's "AdvertismentImage" collection
 * @method Advertisement       setId()                  Sets the current record's "id" value
 * @method Advertisement       setAddTitle()            Sets the current record's "add_title" value
 * @method Advertisement       setItemCategoryId()      Sets the current record's "item_category_id" value
 * @method Advertisement       setUserName()            Sets the current record's "user_name" value
 * @method Advertisement       setUserEmail()           Sets the current record's "user_email" value
 * @method Advertisement       setUserPassword()        Sets the current record's "user_password" value
 * @method Advertisement       setContactPhone()        Sets the current record's "contact_phone" value
 * @method Advertisement       setCreatedAt()           Sets the current record's "created_at" value
 * @method Advertisement       setUpdatedAt()           Sets the current record's "updated_at" value
 * @method Advertisement       setCityId()              Sets the current record's "city_id" value
 * @method Advertisement       setDescription()         Sets the current record's "description" value
 * @method Advertisement       setPrice()               Sets the current record's "price" value
 * @method Advertisement       setStatus()              Sets the current record's "status" value
 * @method Advertisement       setCity()                Sets the current record's "City" value
 * @method Advertisement       setItemCategory()        Sets the current record's "ItemCategory" value
 * @method Advertisement       setAdvertismentDetails() Sets the current record's "AdvertismentDetails" collection
 * @method Advertisement       setAdvertismentImage()   Sets the current record's "AdvertismentImage" collection
 * 
 * @package    blocket
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdvertisement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('advertisement');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('add_title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('item_category_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('user_name', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('user_email', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('user_password', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('contact_phone', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 45,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('city_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('price', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('City', array(
             'local' => 'city_id',
             'foreign' => 'id'));

        $this->hasOne('ItemCategory', array(
             'local' => 'item_category_id',
             'foreign' => 'id'));

        $this->hasMany('AdvertismentDetails', array(
             'local' => 'id',
             'foreign' => 'advertisement_id'));

        $this->hasMany('AdvertismentImage', array(
             'local' => 'id',
             'foreign' => 'advertisement_id'));
    }
}